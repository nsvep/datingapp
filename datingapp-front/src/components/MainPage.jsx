import { useState } from 'react'
import { 
  Card, 
  CardBody, 
  CardHeader,
  Button,
  Chip,
  Avatar,
  Progress,
  Divider
} from '@heroui/react'

const API_BASE_URL = 'https://skrepi-backend-nsvep.amvera.io'

const MainPage = ({ user, onError }) => {
  const [loading, setLoading] = useState(false)
  const [userInfo, setUserInfo] = useState(null)

  const handleGetUserInfo = async () => {
    if (!user?.telegram_id) {
      onError('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      return
    }

    setLoading(true)
    onError(null)

    try {
      const response = await fetch(`${API_BASE_URL}/auth/me?telegram_id=${user.telegram_id}`)
      
      if (!response.ok) {
        const errorData = await response.json()
        throw new Error(errorData.detail || `HTTP error! status: ${response.status}`)
      }

      const userData = await response.json()
      setUserInfo(userData)
    } catch (error) {
      console.error('Get user error:', error)
      onError(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: ${error.message}`)
    } finally {
      setLoading(false)
    }
  }

  const handleDeleteUser = async () => {
    if (!user?.telegram_id) {
      onError('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      return
    }

    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç?')) {
      return
    }

    setLoading(true)
    onError(null)

    try {
      const response = await fetch(`${API_BASE_URL}/auth/me?telegram_id=${user.telegram_id}`, {
        method: 'DELETE'
      })
      
      if (!response.ok) {
        const errorData = await response.json()
        throw new Error(errorData.detail || `HTTP error! status: ${response.status}`)
      }

      // Redirect to auth after successful deletion
      window.location.reload()
    } catch (error) {
      console.error('Delete user error:', error)
      onError(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞: ${error.message}`)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 to-pink-50 pt-20 p-4">
      <div className="max-w-4xl mx-auto space-y-6">
        
        {/* Welcome Card */}
        <Card className="bg-gradient-to-r from-purple-600 to-pink-600 text-white">
          <CardBody className="text-center py-8">
            <h1 className="text-3xl font-bold mb-2">
              –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}! üëã
            </h1>
            <p className="text-purple-100">
              {user?.is_new_user ? '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!' : '–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!'}
            </p>
          </CardBody>
        </Card>

        {/* Profile Status Card */}
        <Card className="w-full">
          <CardHeader className="pb-4">
            <div className="flex items-center gap-4 w-full">
              <Avatar
                name={user?.first_name || 'User'}
                size="lg"
                color="secondary"
                className="flex-shrink-0"
              />
              <div className="flex-1 min-w-0">
                <h3 className="text-xl font-semibold truncate">
                  {user?.first_name} {user?.last_name}
                </h3>
                <p className="text-gray-600 truncate">@{user?.username || 'username'}</p>
                {user?.is_premium && (
                  <Chip color="warning" variant="flat" size="sm" className="mt-1">
                    ‚≠ê Premium
                  </Chip>
                )}
              </div>
            </div>
          </CardHeader>
          <CardBody className="pt-0">
            <div className="space-y-6">
              <div>
                <div className="flex justify-between text-sm mb-2">
                  <span>–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è</span>
                  <span>30%</span>
                </div>
                <Progress 
                  value={30} 
                  color="secondary" 
                  className="w-full"
                  size="sm"
                />
                <p className="text-xs text-gray-500 mt-1">
                  –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                </p>
              </div>
              
              <Divider />
              
              <div className="grid grid-cols-2 gap-4 text-center">
                <div className="p-3 bg-purple-50 rounded-lg">
                  <p className="text-2xl font-bold text-purple-600">0</p>
                  <p className="text-sm text-gray-600">–õ–∞–π–∫–æ–≤</p>
                </div>
                <div className="p-3 bg-pink-50 rounded-lg">
                  <p className="text-2xl font-bold text-pink-600">0</p>
                  <p className="text-sm text-gray-600">–°–æ–≤–ø–∞–¥–µ–Ω–∏–π</p>
                </div>
                <div className="p-3 bg-blue-50 rounded-lg">
                  <p className="text-2xl font-bold text-blue-600">0</p>
                  <p className="text-sm text-gray-600">–°–æ–æ–±—â–µ–Ω–∏–π</p>
                </div>
                <div className="p-3 bg-green-50 rounded-lg">
                  <p className="text-2xl font-bold text-green-600">0</p>
                  <p className="text-sm text-gray-600">–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</p>
                </div>
              </div>
            </div>
          </CardBody>
        </Card>

        {/* Quick Actions */}
        <div className="grid grid-cols-2 gap-4">
          <Card className="hover:shadow-lg transition-shadow cursor-pointer bg-gradient-to-br from-purple-50 to-purple-100">
            <CardBody className="text-center py-6">
              <div className="text-3xl mb-3">üîç</div>
              <h3 className="text-base font-semibold mb-1">–ü–æ–∏—Å–∫ –ª—é–¥–µ–π</h3>
              <p className="text-gray-600 text-xs">
                –ù–∞–π–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π —Ä—è–¥–æ–º —Å –≤–∞–º–∏
              </p>
            </CardBody>
          </Card>

          <Card className="hover:shadow-lg transition-shadow cursor-pointer bg-gradient-to-br from-pink-50 to-pink-100">
            <CardBody className="text-center py-6">
              <div className="text-3xl mb-3">üí¨</div>
              <h3 className="text-base font-semibold mb-1">–°–æ–æ–±—â–µ–Ω–∏—è</h3>
              <p className="text-gray-600 text-xs">
                –û–±—â–∞–π—Ç–µ—Å—å —Å –≤–∞—à–∏–º–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è–º–∏
              </p>
            </CardBody>
          </Card>
        </div>

        {/* Debug/Admin Actions */}
        <Card>
          <CardHeader>
            <h3 className="text-lg font-semibold">–î–µ–π—Å—Ç–≤–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞</h3>
          </CardHeader>
          <CardBody>
            <div className="flex gap-4 flex-wrap">
              <Button
                onClick={handleGetUserInfo}
                isDisabled={loading}
                color="primary"
                variant="bordered"
                isLoading={loading}
              >
                –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              </Button>
              
              <Button
                onClick={handleDeleteUser}
                isDisabled={loading}
                color="danger"
                variant="bordered"
              >
                –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
              </Button>
            </div>

            {/* User Info Display */}
            {userInfo && (
              <Card className="mt-4 bg-gray-50">
                <CardBody>
                  <h4 className="font-semibold mb-2">–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</h4>
                  <pre className="text-xs text-gray-800 overflow-x-auto whitespace-pre-wrap">
                    {JSON.stringify(userInfo, null, 2)}
                  </pre>
                </CardBody>
              </Card>
            )}
          </CardBody>
        </Card>
      </div>
    </div>
  )
}

export default MainPage
